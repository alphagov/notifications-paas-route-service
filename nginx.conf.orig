worker_processes 4;
daemon off;

error_log <%= ENV.fetch("APP_ROOT") %>/nginx/logs/error.log;
events {
  worker_connections 1024;
}

http {
  charset utf-8;

  log_format access_json '{"logType": "nginx-access", '
                         ' "remoteHost": "$remote_addr", '
                         ' "user": "$remote_user", '
                         ' "time": "$time_local", '
                         ' "request": "$request", '
                         ' "status": $status, '
                         ' "size": $body_bytes_sent, '
                         ' "referer": "$http_referer", '
                         ' "userAgent": "$http_user_agent", '
                         ' "x-forwarded-for": "$http_x_forwarded_for", '
                         ' "requestTime": $request_time, '
                         ' "httpHost": "$http_host"}';

  access_log <%= ENV.fetch("APP_ROOT") %>/nginx/logs/access.log.json access_json;
  default_type application/octet-stream;
  include mime.types;
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 30;
  client_max_body_size 5m;
  port_in_redirect off; # Ensure that redirects don't include the internal container PORT
  server_tokens off;

  __SET_REAL_IP_FROM__
  real_ip_header X-Forwarded-For;
  real_ip_recursive on;

  server {
    listen <%= ENV.fetch("PORT") %>;
    server_name localhost;
    proxy_ssl_server_name on;
    resolver 10.0.0.2 ipv6=off;

    if ($http_x_cf_forwarded_url = "") {
      return 403;
    }

  <% if ENV.fetch("CF_SPACE") != 'production' %>
    satisfy any;
    allow 85.133.67.244/32;  # office ip Disaster Recovery VPN
    allow 213.86.153.211/32; # office ip BYOD VPN
    allow 213.86.153.212/32; # office ip WC
    allow 213.86.153.213/32; # office ip WC
    allow 213.86.153.214/32; # office ip VPN
    allow 213.86.153.231/32; # office ip BYOD VPN
    allow 213.86.153.235/32; # office ip WC
    allow 213.86.153.236/32; # office ip WC
    allow 213.86.153.237/32; # office ip VPN
    allow 3.8.59.139/32;     # concourse
    allow 35.178.19.228/32;  # concourse
    deny all;

    auth_basic "GOV.UK Notify - Restricted Area";
    auth_basic_user_file <%= ENV.fetch("HOME") %>/public/htpasswd;

  <% end %>

    error_page 404 /error/404;
    error_page 413 @413;

    location @413 {
        return 302 https://www.<%= ENV.fetch("BASE_DOMAIN")%>/error/413;
    }

    location /static/ {
        auth_basic "off";
        allow "all";
        include <%= ENV.fetch("HOME") %>/nginx/conf/mime.types;
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
        proxy_pass $http_x_cf_forwarded_url;
    }

    location ~ ^/(_status|error/404) {
        auth_basic "off";
        allow "all";
        proxy_pass $http_x_cf_forwarded_url;
    }

    location / {
        proxy_pass $http_x_cf_forwarded_url;
    }
  }
}
